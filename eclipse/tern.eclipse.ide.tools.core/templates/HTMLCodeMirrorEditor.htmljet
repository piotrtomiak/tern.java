<%@ jet package="tern.eclipse.ide.tools.core.webbrowser.codemirror" class="HTMLCodeMirrorEditor" skeleton="generator.skeleton" %>
<% CodeMirrorOptions options = (CodeMirrorOptions)argument; %>
<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<title>Tern - CodeMirror Editor</title>
	<!-- Tern JS -->
	<script src="<%=options.resolveTern("node_modules/acorn/acorn.js") %>"></script>
	<script src="<%=options.resolveTern("node_modules/acorn/acorn_loose.js") %>"></script>
	<script src="<%=options.resolveTern("node_modules/acorn/util/walk.js") %>"></script>
	<script src="<%=options.resolveTern("lib/signal.js") %>"></script>
	<script src="<%=options.resolveTern("lib/tern.js") %>"></script>
	<script src="<%=options.resolveTern("lib/def.js") %>"></script>
	<script src="<%=options.resolveTern("lib/comment.js") %>"></script>
	<script src="<%=options.resolveTern("lib/infer.js") %>"></script>
	<%=options.getTernDefsScriptsToInclude() %>
	<%
	boolean hasTernLint = false;
	tern.server.ITernPlugin[] ternPlugins = options.getTernPlugins();
	if (ternPlugins != null) { 
		tern.server.ITernPlugin plugin = null;
		for (int i = 0; i < ternPlugins.length; i++) {
			plugin = ternPlugins[i];
			if (plugin.getName().equals(tern.server.TernPlugin.lint.name())) {
				hasTernLint = true;
			}
	%><script src="<%=options.resolveTernModule(plugin) %>"></script>
	<%			
		}		
	} 
	%>
	<!-- CodeMirror -->
	<link rel=stylesheet href="<%=options.resolve("codemirror/lib/codemirror.css") %>">
	<link rel=stylesheet href="<%=options.resolve("codemirror/doc/docs.css") %>">
	<script src="<%=options.resolve("codemirror/lib/codemirror.js") %>"></script>
	<script src="<%=options.resolve("codemirror/mode/javascript/javascript.js") %>"></script>
	<link rel=stylesheet href="<%=options.resolve("codemirror/addon/hint/show-hint.css") %>">
	<script src="<%=options.resolve("codemirror/addon/hint/show-hint.js") %>"></script>
	<!-- CodeMirror & Tern -->
	 <script src="<%=options.resolve("codemirror/addon/tern/tern.js") %>"></script>
	 <link rel=stylesheet href="<%=options.resolve("codemirror/addon/tern/tern.css") %>">
	 <%
	   if (hasTernLint) {
	   %>
	    <script src="<%=options.resolve("codemirror/addon/lint/lint.js") %>"></script>
    	<link rel="stylesheet" href="<%=options.resolve("codemirror/addon/lint/lint.css") %>">
	   	 <script src="<%=options.resolve("tern-lint/codemirror/addon/lint/tern-lint.js") %>"></script>
	   <%	   
	   }
	 %>
</head>
<body>
	<p>
		<textarea id="code" name="code"><%= options.getEditorContent() %></textarea>
	</p>
	<dl>
	  <dt>Ctrl-Space</dt><dd>Autocomplete</dd>
	  <dt>Ctrl-I</dt><dd>Find type at cursor</dd>
	  <dt>Alt-.</dt><dd>Jump to definition (Alt-, to jump back)</dd>
	  <dt>Ctrl-Q</dt><dd>Rename variable</dd>
	</dl>	
	<%=options.getEmbedJSONDefs() %>	
	<script>
		var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
    		lineNumbers: true,
    		mode: "javascript"
  		});
  		var defs = <%=options.toJSONDefs() %>;
  		var plugins = <%=options.toJSONPlugins() %>;
		var server = new CodeMirror.TernServer({defs: defs, plugins: plugins});
	    editor.setOption("extraKeys", {
	      "Ctrl-Space": function(cm) { server.complete(cm); },
	      "Ctrl-I": function(cm) { server.showType(cm); },
	      "Alt-.": function(cm) { server.jumpToDef(cm); },
	      "Alt-,": function(cm) { server.jumpBack(cm); },
	      "Ctrl-Q": function(cm) { server.rename(cm); },
	    });
	    <% if (hasTernLint) { %>
	    editor.setOption("gutters",["CodeMirror-lint-markers"]);
    	editor.setOption("lint", {getAnnotations: CodeMirror.ternLint, async : true, server: server})
    	<% } %>
	    editor.on("cursorActivity", function(cm) { server.updateArgHints(cm); });  		
	</script>
</body>
</html>
